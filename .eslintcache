[{"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\index.js":"1","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\App.js":"2","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\reportWebVitals.js":"3","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Header.js":"4","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Home.js":"5","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Product.js":"6","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Checkout.js":"7","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Subtotal.js":"8","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\StateProvider.js":"9","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\reducer.js":"10","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\CheckoutItem.js":"11","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Login.js":"12","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\firebase.js":"13","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Footer.js":"14","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Payment.js":"15","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\axios.js":"16","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Orders.js":"17","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Order.js":"18"},{"size":689,"mtime":1609383831877,"results":"19","hashOfConfig":"20"},{"size":1876,"mtime":1609651357068,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2671,"mtime":1609652489095,"results":"23","hashOfConfig":"20"},{"size":3689,"mtime":1609555067299,"results":"24","hashOfConfig":"20"},{"size":1160,"mtime":1609389837534,"results":"25","hashOfConfig":"20"},{"size":1126,"mtime":1609483253457,"results":"26","hashOfConfig":"20"},{"size":1285,"mtime":1609623950864,"results":"27","hashOfConfig":"20"},{"size":543,"mtime":1609383291302,"results":"28","hashOfConfig":"20"},{"size":1422,"mtime":1609640688100,"results":"29","hashOfConfig":"20"},{"size":1094,"mtime":1609651571121,"results":"30","hashOfConfig":"20"},{"size":2001,"mtime":1609478957152,"results":"31","hashOfConfig":"20"},{"size":608,"mtime":1609477617296,"results":"32","hashOfConfig":"20"},{"size":898,"mtime":1609554394770,"results":"33","hashOfConfig":"20"},{"size":5861,"mtime":1609648709343,"results":"34","hashOfConfig":"20"},{"size":333,"mtime":1609720987374,"results":"35","hashOfConfig":"20"},{"size":978,"mtime":1609717469703,"results":"36","hashOfConfig":"20"},{"size":975,"mtime":1609717497043,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"32vubx",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\index.js",[],["84","85"],"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\App.js",["86","87"],"import './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from './Checkout';\nimport Login from './Login';\nimport { useEffect } from 'react';\nimport { auth } from \"./firebase\";\nimport { useStateValue } from './StateProvider';\nimport Payment from './Payment';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Orders from './Orders';\n\nconst promise = loadStripe(\"pk_test_51I5IXQFbLftxrNpuHpXJgnQhi6QIYbeL4Uof7v7JCauZg6OSEMoyuUxCzvlayxnCWG8sr2de2OV4WIHNKXKLXIjv00XbwkgmYZ\");\n\nfunction App() {\n  const [{ }, dispatch] = useStateValue();\n\n  //will only run once when the app component\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => {\n      console.log(\"THE USER IS >>>\", authUser);\n      if (authUser) {    // if an user is logged in -> set type and user to the user\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        })\n      }\n      else {    // if the user is logged out, set user to null\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        })\n      }\n    })\n  }, [])\n\n  return (\n    <Router>\n      <div className=\"app\">\n        \n        <Switch>\n          <Route path=\"/orders\">\n            <Header/>\n            <Orders/>\n          </Route>\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n        <Route path=\"/checkout\">\n            <Header/>\n            <Checkout />\n          </Route>\n          <Route path=\"/\">\n            <Header/>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\reportWebVitals.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Header.js",["88"],"import React from 'react';\r\nimport \"./Header.css\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Header() {\r\n    const history = useHistory();\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const handleAuth = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n            alert(\"You are LOGGED OUT!\");\r\n        }\r\n    }; \r\n    \r\n    const handleOrders = (e) => {\r\n        if (!user) {\r\n            alert(\"Please SIGN IN to review orders!\");\r\n            history.push(\"/login\");\r\n        }\r\n        else {\r\n            history.push(\"/orders\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\">\r\n                <img className=\"header_logo\" src=\"https://pngimg.com/uploads/amazon/amazon_PNG11.png\" alt=\"amazon\" />\r\n            </Link>\r\n            \r\n            <div className=\"header_search\">\r\n                <input placeholder=\"There aren't many items to search. Just scroll down.....\" className=\"header_searchInput\" type=\"text\"></input>\r\n                <SearchIcon className=\"header_searchIcon\"/>\r\n            </div>\r\n\r\n            <div className=\"header_nav\">\r\n                <Link to={!user && \"/login\"}>\r\n                    <div onClick={handleAuth} className=\"header_option\">\r\n                        <span className=\"header_optionLineOne\">Hello {!user ? \"Guest\" : user?.email}</span>\r\n                        <span className=\"header_optionLineTwo\">{user ? \"Sign Out\" : \"Sign In\"}</span>\r\n                    </div>\r\n                </Link>\r\n                \r\n                    <div onClick={handleOrders} className=\"header_option\">\r\n                        <span className=\"header_optionLineOne\">Returns</span>\r\n                        <span className=\"header_optionLineTwo\">& Orders</span>\r\n                    </div>\r\n                \r\n                <div className=\"header_option\">\r\n                    <span className=\"header_optionLineOne\">Your</span>\r\n                    <span className=\"header_optionLineTwo\">Prime</span>\r\n                </div>\r\n\r\n                <Link to=\"/checkout\">\r\n                    <div className=\"header_optionBasket\">\r\n                        <ShoppingBasketIcon className=\"shop_basket\" />\r\n                        <span className=\"header_optionLineTwo header_basketCount\">{basket?.length}</span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Home.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Product.js",["89"],"import React from 'react';\r\nimport \"./Product.css\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n    const [ state, dispatch] = useStateValue();\r\n    const addToBasket = () => {\r\n        //dispatch the item into the data layer\r\n        dispatch({\r\n            type: \"ADD_TO_BASKET\",\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating,\r\n            },\r\n        });\r\n    };\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product_info\">\r\n                <p>{title}</p>\r\n                <p className=\"product_price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"product_rating\">\r\n                    {Array(rating).fill().map((_, i) => (<p>⭐</p>))}\r\n                </div>\r\n            </div>\r\n            <img src={image} alt=\"\" />\r\n            <button onClick={addToBasket}>Add To Basket</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Checkout.js",["90"],"import React from 'react';\r\nimport \"./Checkout.css\";\r\nimport CheckoutItem from './CheckoutItem';\r\nimport { useStateValue } from './StateProvider';\r\nimport Subtotal from './Subtotal';\r\n\r\nfunction Checkout() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout_left\">\r\n                <img className=\"checkout_ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/02/gc/2020/UK_ASV_Unrec_1._CB416224957_.png\" alt=\"\" />\r\n                <div>\r\n                    <h3 className=\"greet\">Hey {user?.email  /*Use optional chaining*/}</h3>\r\n                    <h2 className=\"checkout_title\">Your Shopping Basket</h2>\r\n                    \r\n                    {basket.map(item => (\r\n                        <CheckoutItem id={item.id} title={item.title} price={item.price} rating={item.rating} image={item.image}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"checkout_right\">\r\n                <Subtotal/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Subtotal.js",["91"],"import React from 'react';\r\nimport \"./Subtotal.css\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useStateValue } from './StateProvider';\r\nimport { getBasketTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory();\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const handleCheckout = (e) => {\r\n        if (!user) {\r\n            alert(\"Please SIGN IN to proceed to Checkout!\");\r\n        }\r\n        else {\r\n            history.push(\"./payment\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat value={getBasketTotal(basket)} displayType={'text'} decimalScale={2} thousandSeparator={true}\r\n                prefix={'$'} renderText={(value) => (\r\n                    <>\r\n                        <p>Subtotal ({basket.length} items): <strong>{value}</strong></p>\r\n                        <small className=\"subtotal_gift\">\r\n                            <input type=\"checkbox\"/> This order contains a gift\r\n                        </small>\r\n                    </>\r\n                )} />\r\n            \r\n            <button onClick={handleCheckout}>Proceed To Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\StateProvider.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\reducer.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\CheckoutItem.js",["92","93"],"import React from 'react';\r\nimport \"./CheckoutItem.css\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction CheckoutItem({ id, title, price, rating, image, hideButton }) {\r\n    const [{ basket }, dispatch] = useStateValue();\r\n    const removeFromBasket = () => {\r\n        dispatch({\r\n            type: \"REMOVE_FROM_BASKET\",\r\n            id: id,\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className=\"checkoutitem\">\r\n            <img className=\"checkoutItem_image\" src={image} />\r\n            <div className=\"checkoutItem_info\">\r\n                <p className=\"checkoutItem_title\">{title}</p>\r\n                <p className=\"checkoutItem_price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"checkoutItem_rating\">\r\n                    {Array(rating).fill().map((_, i) => (<p>⭐</p>))}\r\n                </div>\r\n                {!hideButton && (<button onClick={removeFromBasket}>Remove From Basket</button>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutItem\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Login.js",["94"],"import React, {useState} from 'react';\r\nimport \"./Login.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const signIn = e => {\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).then(auth => {\r\n            history.push(\"/\")\r\n        }).catch(error => alert(error.message))\r\n    };\r\n\r\n    const register = e => {\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password).then((auth) => {\r\n            console.log(auth);\r\n            if (auth) {\r\n                history.push(\"/\")\r\n            }\r\n        }).catch(error => alert(error.message))\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Link to=\"/\">\r\n                <img className=\"login_logo\" src=\"https://pngimg.com/uploads/amazon/amazon_PNG27.png\" />\r\n            </Link>\r\n\r\n            <div className=\"login_container\">\r\n                <p className=\"note\">Click on the logo to go back to the Homepage</p>\r\n                <h1>Sign-In</h1>\r\n                <form>\r\n                    <h5>Email</h5>\r\n                    <input type=\"text\" value={email} onChange={event => setEmail(event.target.value)}/>\r\n                    <h5>Password</h5>\r\n                    <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)}/>\r\n\r\n                    <button type=\"submit\" className=\"login_signinbutton\" onClick={signIn}>Sign In</button>\r\n                </form>\r\n                <p className=\"consent\">For new users, enter your credentials into the input boxes above and hit the \"Create one here\" button below.</p>\r\n\r\n                <button onClick={register} className=\"login_create\">Don't have an account? Create one here</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\firebase.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Footer.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Payment.js",["95"],"import React, {useEffect, useState} from 'react';\r\nimport CheckoutItem from './CheckoutItem';\r\nimport \"./Payment.css\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { getBasketTotal } from './reducer';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useElements, useStripe, CardElement } from '@stripe/react-stripe-js';\r\nimport axios from './axios';\r\nimport { db } from \"./firebase\";\r\n\r\nfunction Payment() {\r\n    const history = useHistory();\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    \r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        //generate a stripe secret which allows us to charge the customers\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                //Stripe expects the total in currencies subunits (cents)\r\n                url: `/payment/create?total=${getBasketTotal(basket) * 100}`,\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n        getClientSecret();\r\n    }, [basket]);   //whenever the basket changes, this will make a request to Stripe to change the total amount\r\n\r\n    console.log(\"The secret is >>>\", clientSecret);\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            //paymentIntent = payment confirmation\r\n            db.collection(\"users\").doc(user?.uid).collection(\"orders\").doc(paymentIntent.id).set({\r\n                basket: basket,\r\n                amount: paymentIntent.amount,\r\n                created: paymentIntent.created,\r\n            })\r\n\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            dispatch({\r\n                type: \"EMPTY_BASKET\",\r\n            })\r\n\r\n            history.replace(\"/orders\");\r\n        })\r\n    }\r\n\r\n    const handleChange = event => {\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment_container\">\r\n                <h1>CHECKOUT (<Link to=\"/checkout\"> {basket?.length} items </Link>)</h1>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment_address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>999 Random Street</p>\r\n                        <p>SomeProvince, SomeCountry X9X 9X9</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Review items and delivery</h3>\r\n                        <div className=\"recalc\">\r\n                        <CurrencyFormat value={getBasketTotal(basket)} displayType={'text'} decimalScale={2} thousandSeparator={true}\r\n                prefix={'$'} renderText={(value) => (\r\n                    <>\r\n                        <p>Subtotal ({basket.length} items): <strong>{value}</strong></p>\r\n                    </>\r\n                )} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"payment_items\">\r\n                        {basket.map(item => (\r\n                            <CheckoutItem id={item.id} title={item.title} price={item.price} image={item.image} rating={item.rating}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment Method</h3>\r\n                        <div className=\"importantnotes\">\r\n                            <small>Please use the sequence of 4242424242... for testing purposes</small>\r\n                            <small>(starting from the card number input box, keep pressing 4 and 2 and 4 and 2 until all fields are filled out, then click BUY NOW).</small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        {/*Stripe Implementation*/}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n                            <div className=\"payment_priceContainer\">\r\n                                <CurrencyFormat renderText={value => (\r\n                                    <h4>Order Total: {value}</h4>\r\n                                )} decimalScale={2} value={getBasketTotal(basket)} displayType={\"text\"} thousandSeparator={true} prefix={\"$\"} />\r\n                                \r\n                                <button className=\"buybutton\" disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\axios.js",[],"C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Orders.js",["96","97","98"],"import React, { useEffect, useState } from 'react';\r\nimport { db } from './firebase';\r\nimport Order from './Order';\r\nimport \"./Orders.css\";\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Orders() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //push real-time database to firestore \r\n        db.collection(\"users\").doc(user?.uid).collection(\"orders\").orderBy(\"created\", \"desc\").onSnapshot(snapshot => (\r\n            setOrders(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n            })))\r\n        ))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your Orders</h1>\r\n\r\n            <div className=\"orders_order\">\r\n                {orders?.map(order => (\r\n                    <Order order={order}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","C:\\Users\\minhq\\Desktop\\ReactJS\\AmazonClone\\amazon-clone\\src\\Order.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":18,"column":10,"nodeType":"105","messageId":"106","endLine":18,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":37,"column":6,"nodeType":"109","endLine":37,"endColumn":8,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":11,"column":30,"nodeType":"113","messageId":"114","endLine":11,"endColumn":38},{"ruleId":"111","severity":1,"message":"115","line":6,"column":13,"nodeType":"113","messageId":"114","endLine":6,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":8,"column":30,"nodeType":"113","messageId":"114","endLine":8,"endColumn":38},{"ruleId":"111","severity":1,"message":"112","line":10,"column":30,"nodeType":"113","messageId":"114","endLine":10,"endColumn":38},{"ruleId":"111","severity":1,"message":"116","line":6,"column":14,"nodeType":"113","messageId":"114","endLine":6,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":16,"column":13,"nodeType":"119","endLine":16,"endColumn":63},{"ruleId":"117","severity":1,"message":"118","line":32,"column":17,"nodeType":"119","endLine":32,"endColumn":104},{"ruleId":"111","severity":1,"message":"120","line":44,"column":15,"nodeType":"113","messageId":"114","endLine":44,"endColumn":22},{"ruleId":"111","severity":1,"message":"116","line":8,"column":14,"nodeType":"113","messageId":"114","endLine":8,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":8,"column":30,"nodeType":"113","messageId":"114","endLine":8,"endColumn":38},{"ruleId":"107","severity":1,"message":"121","line":19,"column":8,"nodeType":"109","endLine":19,"endColumn":10,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["125"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'basket' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'payload' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user?.uid'. Either include it or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch]",{"range":"131","text":"132"},"Update the dependencies array to be: [user?.uid]",{"range":"133","text":"134"},[1198,1200],"[dispatch]",[666,668],"[user?.uid]"]